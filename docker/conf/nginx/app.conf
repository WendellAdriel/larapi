server {
    listen 80;
    server_name     localhost;
    return 301      https://$server_name$request_uri;
}

server {
    listen 443      ssl;
    server_name     localhost;
    root            /var/www/html/app/public;
    index           index.html index.htm index.php;

    error_log  /var/log/nginx/app.access.log;
    access_log /var/log/nginx/app.error.log;

    ssl_certificate_key /etc/nginx/ssl/cert.key;
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
    ssl_prefer_server_ciphers on;

    client_max_body_size 10M;    

    fastcgi_connect_timeout 5000s;
    fastcgi_read_timeout 5000s;
    fastcgi_send_timeout 5000s;

    # serve static files directly
	location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
		access_log off;
		expires max;
		log_not_found off;
	}

    # removes trailing slashes (prevents SEO duplicate content issues)
	if (!-d $request_filename) {
		rewrite ^/(.+)/$ /$1 permanent;
	}

    # enforce NO www
	if ($host ~* ^www\.(.*)) {
		set $host_without_www $1;
		rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
	}

    # unless the request is for a valid file (image, js, css, etc.), send to bootstrap
	if (!-e $request_filename) {
		rewrite ^/(.*)$ /index.php?/$1 last;
		break;
	}

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ~ \.php$ {
        try_files $uri = 404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass    php:9000;
        fastcgi_index   index.php;
        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include         fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
    
    location ~ /\.ht {
		deny all;
	}
}
